{"changed":true,"filter":false,"title":"script3.js","tooltip":"/assets/js/script3.js","value":"// cards!\nvar cardList = [{\n        name: 'jupiter',\n        img: \"assets/images/jupiter.png\",\n        \n    },\n    {\n        name: 'luna',\n        img: \"assets/images/luna.jpg\"\n        \n    },\n    {\n        name: 'mars',\n        img: \"assets/images/mars.jpg\"\n        \n    },\n    {\n        name: 'mercury',\n        img: \"assets/images/mercury.jpg\"\n        \n    },\n    {\n        name: 'moon',\n        img: \"assets/images/moon.jpg\"\n        \n    },\n    {\n        name: 'venus',\n        img: \"assets/images/venus.jpg\"\n        \n    },\n    {\n        name: 'jupiter',\n        img: \"assets/images/jupiter.png\",\n        \n    },\n    {\n        name: 'luna',\n        img: \"assets/images/luna.jpg\"\n        \n    },\n    {\n        name: 'mars',\n        img: \"assets/images/mars.jpg\"\n        \n    },\n    {\n        name: 'mercury',\n        img: \"assets/images/mercury.jpg\"\n        \n    },\n    {\n        name: 'moon',\n        img: \"assets/images/moon.jpg\"\n        \n    },\n    {\n        name: 'venus',\n        img: \"assets/images/venus.jpg\"\n        \n    },\n];\n\n// Randomize game grid on each load\ncardList.sort(() => 0.5 - Math.random());\n\n\n// Storing the count and guess (to test if two selected cards match)\nlet firstTry = '';\nlet secondTry = '';\nlet originalCounter = 50;\nlet counter = originalCounter;\nlet moveCounter = 0;\n\n\nvar resetAll = function() {\n    console.log(\"resetButtonClicked\");\n    firstTry = '';\n    secondTry = '';\n    counter = 50;\n    moveCounter = 0;\n    $(\"#moves\").html(\"\" + moveCounter);\n};\n\ndocument.getElementById(\"reset-btn\").addEventListener(\"click\", resetAll);\n\n// Grab the div with an id of 'game'\nconst game = document.getElementById('game');\n// Create a section with a class of tiles\nconst tiles = document.createElement('section');\ntiles.setAttribute('class', 'tiles');\n// Attach the tiles section to the game div\ngame.appendChild(tiles);\n\n// Game load in body\ndocument.body.onload = startGame();\n\n\n\ncardList.forEach((item, index, arr) => {\n    // Create a div\n    const card = document.createElement('div');\n    card.setAttribute('id', \"card-\" + index);\n    // Apply a card class to that div\n    card.classList.add('card');\n    // Set the data-name attribute of the div to the cardList name\n    card.dataset.name = item.name;\n\n    // Add functionality and styling to \"front\"\n    const front = document.createElement('div');\n    front.classList.add('front');\n\n    // Add functionality and styling to \"back\"\n    const back = document.createElement('div');\n    back.classList.add('back');\n    // Apply the background image of the div to the cardList image\n    card.style.backgroundImage = `url(${item.img})`;\n\n\n    // Append the div to the tiles section\n    tiles.appendChild(card);\n    card.appendChild(front);\n    card.appendChild(back);\n    card.addEventListener('click', function(event) {\n        console.log(\"clicked on card: \"+ index);\n        let clicked = event.target;\n        let count = $(\".selected\").length;\n        console.log(\"sum of total selected items = \"+ count);\n        if (count < 2) {\n            count++;\n            if (count === 1) { // Added a parentNode, since clicking on an inner div (front- or back class) and the data-name is still on the outer div (card).\n                firstTry = clicked.parentNode.dataset.name;\n                console.log(firstTry);\n            } else if (count === 2) {\n                secondTry = clicked.parentNode.dataset.name;\n                console.log(secondTry);\n            }\n             clicked.parentNode.classList.add('selected');\n        } \n        if(count == 2) {\n            moveCounter++;\n            let waiter = setTimeout(function() {\n                if (firstTry !== '' && secondTry !== '') { // If firstTry and secondGuess do not share equal value or type... \n                    if (firstTry === secondTry) { // The match checker, on success or fail\n                        console.log(\"we found a match\");\n                        let items = $(\".selected\");\n                        for(let i = 0; i < items.length; i++) {\n                            items[i].classList.add('match');\n                        }\n                    }\n                    \n                }\n                \n                let correctCount = $(\".match\").length;\n                if(correctCount === cardList.length) {\n                    $('#congrats-modal').modal('show');\n                    document.getElementById(\"finalMove\").innerHTML = moveCounter;\n                    document.getElementById(\"totalTime\").innerHTML = originalCounter - counter;\n                    $('#timesUp-modal').remove();\n                }\n                \n                count = 0;\n                firstTry = '';\n                secondTry = '';\n                var selected = document.querySelectorAll('.selected');\n                selected.forEach(card => {\n                    card.classList.remove('selected');\n                });\n            }, 1000);\n            \n        }\n        \n        \n\n        \n        $(\"#moves\").html(\"\" + moveCounter);\n    });\n});\n\n\nfunction startGame() {\n    // timesUp modal\n    // Count-down (storing on line:49 / reset on line: 58)\n    var interval = setInterval(function() {\n        counter--;\n        // Display 'counter' wherever you want to.\n        if (counter <= -1) {\n            clearInterval(interval);\n\n            // show timesUp modal\n            $('#timesUp-modal').modal('show');\n\n            // the timesUp-modal must be called upon oonce the timer has reached it's 0-point and show the requested results.\n            console.log(moveCounter);\n            $(\"#moveCounter\").text(moveCounter);\n\n        } else {\n            $('#time').text(counter);\n            console.log(\"Timer --> \" + counter);\n        }\n\n    }, 1000);\n\n\n\n}\n\n\n// Modal on page load (start-modal)\n$(window).ready(function() {\n    $('#myModal').modal('show');\n\n});\n\ndocument.getElementById(\"startUp\").addEventListener(\"click\", resetAll);\n\n$(document).ready(function() {\n    $(\".startAgain\").click(function() {\n        location.reload(true);\n    });\n});\n\nvar tunePlay=false;\n$(\"audio\")[0].play(); \n\n$('#tune-btn').click(function(){\n    \n    var $this = $(this);\n  if(tunePlay)\n    {\n      tunePlay=false;\n      $this.text('play sounds'); \n      \n      }else{\n        tunePlay=true;\n      $this.text('Sound Muted'); \n        }\n              \n});","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":222,"column":0},"end":{"row":222,"column":21},"action":"remove","lines":["$(\"audio\")[0].play();"],"id":5},{"start":{"row":222,"column":0},"end":{"row":238,"column":3},"action":"insert","lines":["var tunePlay=false;","$(\"audio\")[0].play(); ","","$('#tune-btn').click(function(){","    ","    var $this = $(this);","  if(tunePlay)","    {","      tunePlay=false;","      $this.text('play sounds'); ","      ","      }else{","        tunePlay=true;","      $this.text('Sound Muted'); ","        }","              ","});"]}]]},"ace":{"folds":[],"scrolltop":2315.78125,"scrollleft":0,"selection":{"start":{"row":238,"column":3},"end":{"row":238,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":9,"state":"no_regex","mode":"ace/mode/javascript"}},"timestamp":1565601831363}